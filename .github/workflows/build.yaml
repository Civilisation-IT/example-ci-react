name: Create Tag and build demo for youtube !

on:
  push:
    branches:
      - main
jobs:
  tags:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.newtag.outputs.tag }}
    steps:
    - name: Check repo
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Fetch tags
      run: git fetch --tags
    - name: Determine new tag
      id: newtag
      run: |
        # Vérifie s'il y a des tags existants
        if git describe --tags `git rev-list --tags --max-count=1` 2>/dev/null; then
          LAST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "Dernier tag trouvé: $LAST_TAG"
          # Sépare le tag en numéros et retire le 'v' initial
          TAG_NUMBER=${LAST_TAG//v/}
          IFS='.' read -r MAJ MIN PATCH <<< "$TAG_NUMBER"
          # Incrémente le dernier numéro (patch version)
          PATCH=$((PATCH + 1))
          NEW_TAG="v$MAJ.$MIN.$PATCH"
        else
          echo "Aucun tag trouvé. Création du tag initial."
          NEW_TAG="v0.0.1"
        fi
        echo "Nouveau tag: $NEW_TAG"
        echo "::set-output name=tag::$NEW_TAG"
    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

    - name: Create and Push Tag
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Créer le tag localement
        git tag ${{ steps.newtag.outputs.tag }}
        
        # Pousser le tag vers le dépôt GitHub
        git push origin ${{ steps.newtag.outputs.tag }}

    - name: Output new tag
      id: output_tag
      run: echo "::set-output name=new_tag::${NEW_TAG}"

  BuildandPush:
    needs: tags
    runs-on: ubuntu-latest
    steps:
    - name: Convert repo name to lowercase
      id: repo_name
      run: echo "::set-output name=lower::$(echo '${{ github.repository }}' | cut -d'/' -f2 | tr '[:upper:]' '[:lower:]')"
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        context: ./vite-react-demo
        file: Dockerfile
        push: true
        tags: ${{ steps.repo_name.outputs.lower }}:${{ needs.tags.outputs.new_tag }}, ${{ steps.repo_name.outputs.lower }}:latest
        labels: org.opencontainers.image.source=https://github.com/${{ github.repository }} ## https://opencontainers.org/
     